

name: PDFMerger Build and Deployment

  

run-name: ${{ github.actor }}â€™s Build and Test

  

on: [push]

  

  

env:

  

DOTNET_VERSION: '3.1.x'

  

  

jobs:

  

build-and-test:

  

  

runs-on: windows-latest

  

  

steps:

  

  

- uses: actions/checkout@v3

  

- name: Setup dotnet

  

â€‹ uses: actions/setup-dotnet@v3.0.1

  

â€‹ with:

  

â€‹ dotnet-version: ${{ env.DOTNET_VERSION }}

  

- uses: actions/cache@v3

  

â€‹ with:

  

â€‹ path: ~/.nuget/packages

  

  

â€‹ key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}

  

â€‹ restore-keys: |

  

â€‹ ${{ runner.os }}-nuget

  

- run: echo "The job was automatically triggered by a ${{ github.event_name }} event."

  

- run: echo "This job is now running on a ${{ runner.os }} server hosted by GitHub!"

  

- run: echo "The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."

  

- name: Check out repository code

  

â€‹ uses: actions/checkout@v3

  

- run: echo "ðŸ’¡ The ${{ github.repository }} repository has been cloned to the runner."

  

- run: echo "The workflow is now ready to test your code on the runner."

  

- name: List files in the repository

  

â€‹ run: |

  

â€‹ ls ${{ github.workspace }}

  

- name: Display dotnet version

  

â€‹ run: dotnet --version

  

- name: Install Nuget Dependencies

  

â€‹ run: nuget restore

  

- name: Install Dependencies

  

â€‹ run: dotnet restore

  

- name: Run linters

  

â€‹ uses: wearerequired/lint-action@v2

  

â€‹ with:

  

â€‹ auto_fix: true

  

- name: Build

  

â€‹ run: dotnet build

  

- name: Test with the dotnet CLI

  

â€‹ run: dotnet test

  

- run: echo "The status of the job is as follows ${{ job.status }}."
